// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using Application.ApplicationLayer.ViewModels;
using GalaSoft.MvvmLight.Helpers;
using UILayer.UILayer.CollectionViews;
using UILayer.UILayer.CollectionViews.Cells;
using UILayer.UILayer.Common;
using UILayer.UILayer.Common.Navigation;
using UILayer.UILayer.Common.UI;
using UIKit;

namespace UILayer.UILayer.Views
{
	public partial class FollowersViewController : UIViewController, IBinder, IStyler
	{
		private readonly FollowersViewModel dataContext;
        private readonly FollowersCollectionViewSource source;

        public List<Binding> Bindings { get; set; }

        public FollowersViewController (IntPtr handle) : base (handle)
		{
            dataContext = new FollowersViewModel(CurrentUser.UserId);
            Bindings = new List<Binding>();

            source = new FollowersCollectionViewSource(CurrentUser.UserId);

            source.LoadData(dataContext.Users.ToList());
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            SetBindings();
            SetCommands();
            BaseStyling();
            EventStyling();
            SetEvents();

            NavigationBar.Set(this, HomeButton, FriendsButton, AddPostButton, ProfileButton);

            UsersCollectionView.RegisterNibForCell(FollowerCollectionViewCell.Nib, FollowerCollectionViewCell.Key);

            var layout = new UICollectionViewFlowLayout();
            layout.ItemSize = new CoreGraphics.CGSize(388, 62);

            UsersCollectionView.SetCollectionViewLayout(layout, true);

            UsersCollectionView.Source = source;
            UsersCollectionView.ReloadData();

            source.OnItemChanged += (o, e) =>
            {
                source.LoadData(dataContext.Users.ToList());

                UsersCollectionView.ReloadData();
            };
        }

        public void SetBindings()
        {
        }

        public void SetCommands()
        {
            AllUsersButton.SetCommand(dataContext.ShowAllUsersCommand);
            FollowersButton.SetCommand(dataContext.ShowFollowersCommand);
            FollowingButton.SetCommand(dataContext.ShowFollowingCommand);
        }

        public void BaseStyling()
        {
            Styler.SetTextColor(AllUsersButton, Colors.secondFontColor);
            Styler.SetTextColor(FollowersButton, Colors.secondFontColor);
            Styler.SetTextColor(FollowingButton, Colors.secondFontColor);
        }

        public void EventStyling()
        {
        }

        public void SetEvents()
        {
            AllUsersButton.TouchUpInside += (o, e) =>
            {
                source.LoadData(dataContext.Users.ToList());

                UsersCollectionView.Source = source;
                UsersCollectionView.ReloadData();
            };

            FollowingButton.TouchUpInside += (o, e) =>
            {
                source.LoadData(dataContext.Users.ToList());

                UsersCollectionView.Source = source;
                UsersCollectionView.ReloadData();
            };

            FollowersButton.TouchUpInside += (o, e) =>
            {
                source.LoadData(dataContext.Users.ToList());

                UsersCollectionView.Source = source;
                UsersCollectionView.ReloadData();
            };
        }
    }
}
