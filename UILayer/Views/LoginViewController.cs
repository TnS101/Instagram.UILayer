// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using GalaSoft.MvvmLight.Helpers;
using UILayer.UILayer.Common;
using UILayer.UILayer.Common.Navigation;
using UILayer.UILayer.Common.UI;
using UIKit;
using Application.ApplicationLayer.ViewModels;

namespace UILayer.UILayer.Views
{
    public partial class LoginViewController : UIViewController, IBinder, IStyler
    {
        private readonly LoginViewModel dataContext;

        public List<Binding> Bindings { get; set; }

        public LoginViewController(IntPtr handle) : base(handle)
        {
            dataContext = new LoginViewModel();
            Bindings = new List<Binding>();
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            SetBindings();
            SetCommands();
            BaseStyling();
            EventStyling();

            RegisterButton.TouchUpInside += (o, e) =>
            {
                Navigator.Navigate(this, CtrConst.RegisterController);
            };
        }

        public void BaseStyling()
        {
            Styler.SetTextColor(UsernameTextField, Colors.mainFontColor);
            Styler.SetTextColor(PasswordTextField, Colors.mainFontColor);
            Styler.SetTextColor(ErrorLabel, UIColor.Red);

            Styler.SetShadows(LoginButton, UIColor.Black, 2, 3, 3f);
        }

        public void SetCommands()
        {
            LoginButton.SetCommand(dataContext.LoginCommand, this.SetBinding(() => UsernameTextField.Text));
        }

        public void SetBindings()
        {
            Bindings.Add(this.SetBinding
                (
                  () => dataContext.Password,
                  () => PasswordTextField.Text,
                  BindingMode.TwoWay
                ));

            Bindings.Add(this.SetBinding
                (
                    () => dataContext.Username,
                    () => UsernameTextField.Text,
                    BindingMode.TwoWay
                ));

            Bindings.Add(this.SetBinding
                (
                () => dataContext.LoginSucceeded,
                () => ErrorLabel.Text
                ).ConvertSourceToTarget((s) =>
                {
                    if (s)
                    {
                        CurrentUser.UserId = dataContext.UserId;

                        Navigator.Navigate(this, CtrConst.FeedController);
                        return ErrorLabel.Text = string.Empty;
                    }
                    else
                    {
                        if (string.IsNullOrWhiteSpace(UsernameTextField.Text) && string.IsNullOrWhiteSpace(PasswordTextField.Text)) return string.Empty;

                        return ErrorLabel.Text = "Incorrect username or password";
                    }
                }));
        }

        public void EventStyling()
        {
        }
    }
}
